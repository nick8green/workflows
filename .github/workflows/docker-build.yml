name: build and publish application image

on:
  workflow_call:
    inputs:
      args:
        default: ''
        description: 'Additional arguments to pass to the build'
        required: false
        type: string
      context:
        default: '.'
        description: 'Path to the build context'
        required: false
        type: string
      file:
        default: './Dockerfile'
        description: 'Path to the Dockerfile'
        required: false
        type: string
      reference:
        description: 'Reference to the image'
        required: true
        type: string
      registry:
        default: 'ghcr.io'
        description: 'Registry to push to'
        required: false
        type: string
      password:
        description: 'Password for the registry'
        required: false
        type: string
      platform:
        default: 'linux/arm64,linux/amd64'
        description: 'Platform(s) to build for'
        required: false
        type: string
      push:
        default: true
        description: 'Push to registry'
        required: false
        type: boolean
      timeout:
        default: 10
        description: 'Timeout in minutes'
        required: false
        type: number
      user:
        default: ${{ github.actor }}
        description: 'Username for the registry'
        required: false
        type: string

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

permissions:
  contents: read
  packages: write

jobs:
  docker:
    name: 🏗️ Build and publish image
    outputs:
      image: ${{ steps.vars.outputs.image }}
      tag: ${{ steps.vars.outputs.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏷️ set tag
        id: vars
        # run: echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT
        run: |
          echo "tag=${{ env.BRANCH_NAME }}" >> $GITHUB_OUTPUT
          echo "image=ghcr.io/${{ inputs.reference }}" >> $GITHUB_OUTPUT

      - name: 🧱 set up qemu
        uses: docker/setup-qemu-action@v3

      - name: 🧱 set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 login to docker hub
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.user }}
          password: ${{ inputs.password || secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: 🏗️ build and push
        uses: docker/build-push-action@v6
        with:
          build-args: ${{ inputs.args }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          platforms: ${{ inputs.platform }}
          provenance: false
          push: ${{ inputs.push }}
          sbom: false
          tags: |
            ${{ steps.vars.outputs.image }}:${{ steps.vars.outputs.tag }}

      # - name: 🏷️ tag release image
      #   if: ${{ env.BRANCH_NAME == 'release' }}
      #   run: docker tag ghcr.io/${{ github.repository }}:${{ env.BRANCH_NAME }} ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.tag }}

      # - name: 🏷️ tag latest image
      #   if: ${{ env.BRANCH_NAME == 'main' }}
      #   run: docker tag ghcr.io/${{ github.repository }}:${{ env.BRANCH_NAME }} ghcr.io/${{ github.repository }}:latest

      - run: mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    timeout-minutes: ${{ inputs.timeout }}

# Supported platforms:
#   - linux/amd64
#   - linux/arm/v7
#   - linux/arm64/v8
#   - linux/ppc64le
#   - linux/s390x
