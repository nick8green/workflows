name: cleanup old GH workflow runs
on:
  workflow_call:
    inputs:
      keep-successful:
        default: '10'
        description: "how many successful runs to keep"
        required: false
        type: string
    secrets:
      token:
        required: true

jobs:
  cleanup:
    env:
      CURRENT_RUN_ID: ${{ github.run_id }}
      KEEP: ${{ inputs.keep-successful }}
      REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.token }}
    name: üßπ clean up workflow runs
    permissions:
      contents: read
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: üóëÔ∏è Delete old workflow runs
        run: |
          WORKFLOWS=$(gh api repos/$REPO/actions/workflows --paginate -q '.workflows[] | {id: .id, name: .name}')

          echo "$WORKFLOWS" | jq -c '.' | while read -r workflow; do
            ID=$(echo "$workflow" | jq -r '.id')
            NAME=$(echo "$workflow" | jq -r '.name')
            echo "üîç Processing workflow: $NAME"

            # Delete non-successful runs (excluding current run)
            RUNS=$(gh api repos/$REPO/actions/workflows/$ID/runs --paginate -q '.workflow_runs[] | select(.conclusion != "success") | {conclusion: .conclusion, id: .id}')
            for run in $RUNS; do
              RUN_ID=$(echo "$run" | jq -r '.id')
              CONCLUSION=$(echo "$run" | jq -r '.conclusion')
              if [[ -z "$RUN_ID" || -z "$CONCLUSION" ]]; then
                echo "‚ö†Ô∏è Skipping run with missing ID or conclusion"
                continue
              fi
              if [[ "$RUN_ID" == "$CURRENT_RUN_ID" ]]; then
                echo "‚è© Skipping current workflow run (ID: $RUN_ID)"
                continue
              fi
              echo "üóëÔ∏è Deleting $CONCLUSION run: $RUN_ID"
              gh api --method DELETE repos/$REPO/actions/runs/$RUN_ID
            done

            # Keep only the latest $KEEP successful runs
            SUCCESS_RUNS=$(gh api repos/$REPO/actions/workflows/$ID/runs?status=success --paginate -q '.workflow_runs[].id')
            COUNT=0
            for run_id in $SUCCESS_RUNS; do
              COUNT=$((COUNT + 1))
              if [ "$COUNT" -gt "$KEEP" ]; then
                if [[ "$run_id" == "$CURRENT_RUN_ID" ]]; then
                  echo "‚è© Skipping current successful run (ID: $run_id)"
                  continue
                fi
                echo "üóëÔ∏è Deleting old successful run: $run_id"
                gh api --method DELETE repos/$REPO/actions/runs/$run_id
              fi
            done
          done
