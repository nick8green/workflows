name: "setup node.js"
description: "Sets up Node.js for the workflow and caches dependencies for npm, yarn, or pnpm"

inputs:
  version:
    description: "Version of Node.js to use"
    required: false
  registry:
    default: ""
    description: "URL of the npm registry to use"
    required: false

runs:
  using: "composite"
  steps:
    - name: 🧮 get version
      id: get-version
      shell: bash
      run: |
        if [ -f ".nvmrc" ]; then
          NODE_VERSION=$(cat .nvmrc | sed -E 's/^v?//g;t')
        elif [ -n "${{ inputs.version }}" ]; then
          NODE_VERSION="${{ inputs.version }}"
        else
          NODE_VERSION="22.x"
        fi
        echo "version=$NODE_VERSION" >> "$GITHUB_OUTPUT"

    - name: ⚙️ setup node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ steps.get-version.outputs.version }}
        registry-url: ${{ inputs.registry }}

    - name: 🧰 detect package manager
      id: detect-pm
      shell: bash
      run: |
        if [ -f "pnpm-lock.yaml" ]; then
          PM=pnpm
        elif [ -f "yarn.lock" ]; then
          PM=yarn
          corepack enable
        elif [ -f "package-lock.json" ]; then
          PM=npm
        else
          echo "No known lockfile found. Cannot determine package manager." >&2
          exit 1
        fi
        echo "manager=$PM" >> "$GITHUB_OUTPUT"

    - name: 🛠 setup pnpm
      if: steps.detect-pm.outputs.manager == 'pnpm'
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: 📦 cache dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          ~/.yarn
          ~/.pnpm-store
          node_modules
        key: ${{ runner.os }}-deps-${{ steps.detect-pm.outputs.manager }}-${{ hashFiles('**/pnpm-lock.yaml', '**/yarn.lock', '**/package-lock.json') }}

    - name: 📥 install dependencies
      shell: bash
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        case "${{ steps.detect-pm.outputs.manager }}" in
          pnpm)
            pnpm install --frozen-lockfile
            ;;
          yarn)
            yarn install --frozen-lockfile
            ;;
          npm)
            npm ci
            ;;
        esac
